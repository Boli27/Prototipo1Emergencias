// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prototipo1.Context;

#nullable disable

namespace Prototipo1.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Prototipo1.Models.Administrador", b =>
                {
                    b.Property<int>("IdAdministrador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAdministrador"));

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAdministrador");

                    b.ToTable("Administradores");
                });

            modelBuilder.Entity("Prototipo1.Models.Reporte", b =>
                {
                    b.Property<int>("IdReporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdReporte"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdUbicacion")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuarioBrigadista")
                        .HasColumnType("int");

                    b.HasKey("IdReporte");

                    b.HasIndex("IdUbicacion");

                    b.HasIndex("IdUsuario");

                    b.HasIndex("IdUsuarioBrigadista");

                    b.ToTable("Reportes");
                });

            modelBuilder.Entity("Prototipo1.Models.Ubicacion", b =>
                {
                    b.Property<int>("IdUbicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUbicacion"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Edificio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InformacionAdicional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Salon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sede")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUbicacion");

                    b.ToTable("Ubicaciones");
                });

            modelBuilder.Entity("Prototipo1.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CorreoInstitucional")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EsBrigadista")
                        .HasColumnType("bit");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Prototipo1.Models.Reporte", b =>
                {
                    b.HasOne("Prototipo1.Models.Ubicacion", "Ubicacion")
                        .WithMany("Reportes")
                        .HasForeignKey("IdUbicacion")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Prototipo1.Models.Usuario", "Usuario")
                        .WithMany("ReportesRealizados")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Prototipo1.Models.Usuario", "UsuarioBrigadista")
                        .WithMany("ReportesAsignados")
                        .HasForeignKey("IdUsuarioBrigadista")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Ubicacion");

                    b.Navigation("Usuario");

                    b.Navigation("UsuarioBrigadista");
                });

            modelBuilder.Entity("Prototipo1.Models.Ubicacion", b =>
                {
                    b.Navigation("Reportes");
                });

            modelBuilder.Entity("Prototipo1.Models.Usuario", b =>
                {
                    b.Navigation("ReportesAsignados");

                    b.Navigation("ReportesRealizados");
                });
#pragma warning restore 612, 618
        }
    }
}
